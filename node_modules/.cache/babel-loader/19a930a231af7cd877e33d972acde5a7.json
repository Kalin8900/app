{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projekty\\\\Webstorm\\\\reactPort\\\\src\\\\pages\\\\mobile\\\\MyWorkMobilePage.js\";\nimport React, { useRef, useEffect, useState } from \"react\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport PageWrapper from \"../../components/PageWrapper\";\nimport blueTriangle from \"../../misc/images/tr_3.png\";\nimport StyledTriangle from \"../../components/Triangles\";\nimport rootTheme from \"../../themes/root\";\nimport Project from \"../../components/Project\";\nimport { ReactComponent as Arrow } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../misc/images/arrow.svg\";\nconst MyWorkMobileWrapper = styled(PageWrapper)`\n    display: flex;\n    flex-flow: column;\n`;\nconst CentringDiv = styled.div`\n  display: flex;\n  flex-flow: column;\n  justify-content: space-between;\n  height: 100vh;\n`;\nconst TextWrapper = styled.div`\n    margin-top: 5vh;\n    font-size: ${props => props.theme.fontSize.xlarge}vw;\n    font-weight: bold;\n    justify-self: center;\n    align-self: center;\n    margin-bottom: 5vh;\n`;\nconst ProjectsWrapper = styled.div`\n    position: relative;\n    width: 100%;\n    height: 85vh;\n    display: flex;\n    flex-flow: column;\n    justify-content: space-between;\n    align-items: center;\n    margin-bottom: 1vh;\n`;\nconst MobileProject = styled(Project)`\n    width: 100%;\n`;\n\nconst MyWorkMobilePage = props => {\n  // const ref = useRef(null)\n  //\n  // const [renderCnt, setRenderCnt] = useState(0);\n  //\n  // /**prepared for zooming projects**/\n  // const [projectsArr, setProjectsArr] = useState([]);\n  //\n  // //const [currentProject, setCurrentProject] = useState(null);\n  //\n  // useEffect(() => {\n  //     if (renderCnt === 0) {\n  //         const ProjectsWrapper = ref.current.children;\n  //         const tempArr = [];\n  //         let i;\n  //         for (i = 0; i < ProjectsWrapper.length; ++i)\n  //             tempArr.push(ProjectsWrapper[i].children[0]);\n  //         setProjectsArr(tempArr);\n  //         setRenderCnt(1);\n  //     }\n  // }, [renderCnt, ref])\n  return /*#__PURE__*/React.createElement(ThemeProvider, {\n    theme: rootTheme,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(MyWorkMobileWrapper, {\n    id: props.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(CentringDiv, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(StyledTriangle, {\n    as: \"img\",\n    src: blueTriangle,\n    alt: \"blue\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 21\n    }\n  }), /*#__PURE__*/React.createElement(TextWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 21\n    }\n  }, \"Here you can find my projects\"), /*#__PURE__*/React.createElement(ProjectsWrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 21\n    }\n  }, /*#__PURE__*/React.createElement(Project, {\n    primary: true,\n    mobile: true,\n    header: \"My first React site\",\n    text: ReactProjectText,\n    href: \"https://github.com/Kalin8900/reactPort\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 25\n    }\n  }), /*#__PURE__*/React.createElement(Arrow, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 25\n    }\n  })))));\n};\n\nconst EANProjectText = \"This project was about refactoring code from C to C++. I received a short C program which was just creating and saving the bitmap. \" + \"The main goal was to create a bitmap with generated EAN-8 Code and save it to file. \" + \"I've done this by creating a class witch handle the bitmap creating and saving. The class has also a method which can generate a EAN-8 Code with (almost) any size of the image. \" + \"The implementation of the class is very surprising. I really recommend to take a look on it.\";\nconst ReactProjectText = \"During the second semester of study, I had the pleasure to participate in a subject that aimed to familiarize me with Internet technologies. \" + \"The scope of the subject ended with VanillaJS and PHP, so I decided that I would take myself and start moving the page made during classes to React.js. \" + \"The entire page has been written only on the basis of React and GSAP documentation. If you are curious how it looked like earlier, please visit the repository!\";\nconst AnimProjectText = \"After a moment of fun with the basic controls, Graph_lib and FLTK documentation, it was time to create the first animations using these libraries. \" + \"While writing this program, my tiny figure API was also used, which was modified over several tasks. \" + \"The task required a lot of thinking over mathematical transformations, but it gave me a lot of fun and taught me a lot.\";\nconst MedianProjectText = \"The main purpose of this task was to write a program that reads the BMP file, puts a median filter on it, and writes to the second BMP file. \" + \"n addition, I had to transfer the code from the received program written in C to C++. This code read and wrote BMP files. \" + \"This task showed the difference in binary file operations between C and C++. Stream operations in C++ proved to be crucial!\";\nconst MenuProjectText = \"Programs that have an extensive user interface have always fascinated me. \" + \"Using the Graph_lib library, I wrote a rather interesting menu that when opened moves other elements without doing overflow. \" + \"Thanks to this task I entered the world of creating such interfaces and you can see the results of my work by clicking the link below.\";\nexport default MyWorkMobilePage;","map":{"version":3,"sources":["E:/Projekty/Webstorm/reactPort/src/pages/mobile/MyWorkMobilePage.js"],"names":["React","useRef","useEffect","useState","styled","ThemeProvider","PageWrapper","blueTriangle","StyledTriangle","rootTheme","Project","MyWorkMobileWrapper","CentringDiv","div","TextWrapper","props","theme","fontSize","xlarge","ProjectsWrapper","MobileProject","MyWorkMobilePage","id","ReactProjectText","EANProjectText","AnimProjectText","MedianProjectText","MenuProjectText"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,MAAf,EAAuBC,SAAvB,EAAkCC,QAAlC,QAAiD,OAAjD;AACA,OAAOC,MAAP,IAAgBC,aAAhB,QAAoC,mBAApC;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,YAAP,MAAyB,4BAAzB;AACA,OAAOC,cAAP,MAA2B,4BAA3B;AACA,OAAOC,SAAP,MAAsB,mBAAtB;AACA,OAAOC,OAAP,MAAoB,0BAApB;;AAGA,MAAMC,mBAAmB,GAAGP,MAAM,CAACE,WAAD,CAAc;;;CAAhD;AAKA,MAAMM,WAAW,GAAGR,MAAM,CAACS,GAAI;;;;;CAA/B;AAOA,MAAMC,WAAW,GAAGV,MAAM,CAACS,GAAI;;iBAEdE,KAAK,IAAIA,KAAK,CAACC,KAAN,CAAYC,QAAZ,CAAqBC,MAAO;;;;;CAFtD;AASA,MAAMC,eAAe,GAAGf,MAAM,CAACS,GAAI;;;;;;;;;CAAnC;AAWA,MAAMO,aAAa,GAAGhB,MAAM,CAACM,OAAD,CAAU;;CAAtC;;AAIA,MAAMW,gBAAgB,GAAIN,KAAD,IAAW;AAChC;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA,sBACI,oBAAC,aAAD;AAAe,IAAA,KAAK,EAAEN,SAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,mBAAD;AAAqB,IAAA,EAAE,EAAEM,KAAK,CAACO,EAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,cAAD;AAAgB,IAAA,EAAE,EAAC,KAAnB;AAAyB,IAAA,GAAG,EAAEf,YAA9B;AAA4C,IAAA,GAAG,EAAC,MAAhD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,WAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qCAFJ,eAGI,oBAAC,eAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACI,oBAAC,OAAD;AAAS,IAAA,OAAO,MAAhB;AAAiB,IAAA,MAAM,EAAE,IAAzB;AAA+B,IAAA,MAAM,EAAE,qBAAvC;AAA8D,IAAA,IAAI,EAAEgB,gBAApE;AACS,IAAA,IAAI,EAAE,wCADf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAWI,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAXJ,CAHJ,CADJ,CADJ,CADJ;AAuBH,CA7CD;;AA+CA,MAAMC,cAAc,GAAG,wIACnB,sFADmB,GAEnB,mLAFmB,GAGnB,8FAHJ;AAKA,MAAMD,gBAAgB,GAAG,kJACrB,0JADqB,GAErB,iKAFJ;AAIA,MAAME,eAAe,GAAG,wJACpB,uGADoB,GAEpB,yHAFJ;AAIA,MAAMC,iBAAiB,GAAG,kJACtB,4HADsB,GAEtB,6HAFJ;AAIA,MAAMC,eAAe,GAAG,+EACpB,+HADoB,GAEpB,wIAFJ;AAIA,eAAeN,gBAAf","sourcesContent":["import React, {useRef, useEffect, useState} from \"react\";\r\nimport styled, {ThemeProvider} from \"styled-components\";\r\nimport PageWrapper from \"../../components/PageWrapper\";\r\nimport blueTriangle from \"../../misc/images/tr_3.png\";\r\nimport StyledTriangle from \"../../components/Triangles\";\r\nimport rootTheme from \"../../themes/root\";\r\nimport Project from \"../../components/Project\";\r\nimport {ReactComponent as Arrow} from \"../../misc/images/arrow.svg\";\r\n\r\nconst MyWorkMobileWrapper = styled(PageWrapper)`\r\n    display: flex;\r\n    flex-flow: column;\r\n`;\r\n\r\nconst CentringDiv = styled.div`\r\n  display: flex;\r\n  flex-flow: column;\r\n  justify-content: space-between;\r\n  height: 100vh;\r\n`;\r\n\r\nconst TextWrapper = styled.div`\r\n    margin-top: 5vh;\r\n    font-size: ${props => props.theme.fontSize.xlarge}vw;\r\n    font-weight: bold;\r\n    justify-self: center;\r\n    align-self: center;\r\n    margin-bottom: 5vh;\r\n`;\r\n\r\nconst ProjectsWrapper = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n    height: 85vh;\r\n    display: flex;\r\n    flex-flow: column;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    margin-bottom: 1vh;\r\n`;\r\n\r\nconst MobileProject = styled(Project)`\r\n    width: 100%;\r\n`;\r\n\r\nconst MyWorkMobilePage = (props) => {\r\n    // const ref = useRef(null)\r\n    //\r\n    // const [renderCnt, setRenderCnt] = useState(0);\r\n    //\r\n    // /**prepared for zooming projects**/\r\n    // const [projectsArr, setProjectsArr] = useState([]);\r\n    //\r\n    // //const [currentProject, setCurrentProject] = useState(null);\r\n    //\r\n    // useEffect(() => {\r\n    //     if (renderCnt === 0) {\r\n    //         const ProjectsWrapper = ref.current.children;\r\n    //         const tempArr = [];\r\n    //         let i;\r\n    //         for (i = 0; i < ProjectsWrapper.length; ++i)\r\n    //             tempArr.push(ProjectsWrapper[i].children[0]);\r\n    //         setProjectsArr(tempArr);\r\n    //         setRenderCnt(1);\r\n    //     }\r\n    // }, [renderCnt, ref])\r\n\r\n    return (\r\n        <ThemeProvider theme={rootTheme}>\r\n            <MyWorkMobileWrapper id={props.id}>\r\n                <CentringDiv>\r\n                    <StyledTriangle as=\"img\" src={blueTriangle} alt=\"blue\"/>\r\n                    <TextWrapper>Here you can find my projects</TextWrapper>\r\n                    <ProjectsWrapper>\r\n                        <Project primary mobile={true} header={\"My first React site\"} text={ReactProjectText}\r\n                                 href={\"https://github.com/Kalin8900/reactPort\"}/>\r\n                        {/*<Project header={\"EAN-8 generator\"} text={EANProjectText}*/}\r\n                        {/*         href={\"https://github.com/Kalin8900/Studies/tree/master/zad_9\"}/>*/}\r\n                        {/*<Project header={\"Animations in FLTK!\"} text={AnimProjectText}*/}\r\n                        {/*         href={\"https://github.com/Kalin8900/Studies/tree/master/zad_6\"}/>*/}\r\n                        {/*<Project header={\"Median filter on BMP\"} text={MedianProjectText}*/}\r\n                        {/*         href={\"https://github.com/Kalin8900/Studies/tree/master/zad_8\"}/>*/}\r\n                        {/*<Project header={\"Menus in Graph_lib\"} text={MenuProjectText}*/}\r\n                        {/*         href={\"https://github.com/Kalin8900/Studies/tree/master/zad_7\"}/>*/}\r\n                        <Arrow />\r\n                    </ProjectsWrapper>\r\n                </CentringDiv>\r\n            </MyWorkMobileWrapper>\r\n        </ThemeProvider>\r\n    )\r\n}\r\n\r\nconst EANProjectText = \"This project was about refactoring code from C to C++. I received a short C program which was just creating and saving the bitmap. \" +\r\n    \"The main goal was to create a bitmap with generated EAN-8 Code and save it to file. \" +\r\n    \"I've done this by creating a class witch handle the bitmap creating and saving. The class has also a method which can generate a EAN-8 Code with (almost) any size of the image. \" +\r\n    \"The implementation of the class is very surprising. I really recommend to take a look on it.\";\r\n\r\nconst ReactProjectText = \"During the second semester of study, I had the pleasure to participate in a subject that aimed to familiarize me with Internet technologies. \" +\r\n    \"The scope of the subject ended with VanillaJS and PHP, so I decided that I would take myself and start moving the page made during classes to React.js. \" +\r\n    \"The entire page has been written only on the basis of React and GSAP documentation. If you are curious how it looked like earlier, please visit the repository!\";\r\n\r\nconst AnimProjectText = \"After a moment of fun with the basic controls, Graph_lib and FLTK documentation, it was time to create the first animations using these libraries. \" +\r\n    \"While writing this program, my tiny figure API was also used, which was modified over several tasks. \" +\r\n    \"The task required a lot of thinking over mathematical transformations, but it gave me a lot of fun and taught me a lot.\";\r\n\r\nconst MedianProjectText = \"The main purpose of this task was to write a program that reads the BMP file, puts a median filter on it, and writes to the second BMP file. \" +\r\n    \"n addition, I had to transfer the code from the received program written in C to C++. This code read and wrote BMP files. \" +\r\n    \"This task showed the difference in binary file operations between C and C++. Stream operations in C++ proved to be crucial!\";\r\n\r\nconst MenuProjectText = \"Programs that have an extensive user interface have always fascinated me. \" +\r\n    \"Using the Graph_lib library, I wrote a rather interesting menu that when opened moves other elements without doing overflow. \" +\r\n    \"Thanks to this task I entered the world of creating such interfaces and you can see the results of my work by clicking the link below.\";\r\n\r\nexport default MyWorkMobilePage;"]},"metadata":{},"sourceType":"module"}