{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Studies\\\\Webstorm\\\\portfolio\\\\application\\\\src\\\\App.js\";\nimport React from 'react';\nimport logo from \"./logo.svg\";\nimport './App.css';\nimport styled from \"styled-components\";\nconst helloWorld = styled.h1`\n  font-size: 25px; \n  background-color: black;\n  color: white;\n`; // Create a Title component that'll render an <h1> tag with some styles\n\nconst Title = styled.h1`\n  font-size: 1.5em;\n  text-align: center;\n  color: palevioletred;\n`; // Create a Wrapper component that'll render a <section> tag with some styles\n\nconst Wrapper = styled.section`\n  padding: 4em;\n  background: papayawhip;\n`; // Use Title and Wrapper like any other React component – except they're styled!\n// render(\n//     <Wrapper>\n//       <Title>\n//         Hello World!\n//       </Title>\n//     </Wrapper>\n// );\n\nfunction App() {\n  return /*#__PURE__*/React.createElement(Wrapper, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Title, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 9\n    }\n  }, \"Hello World!\")) // <helloWorld>Hello!</helloWorld>\n  // <div className=\"App\">\n  //   <header className=\"App-header\">\n  //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n  //     <p>\n  //       Edit <code>src/App.js</code> and save to reload.\n  //     </p>\n  //     <helloWorld>Hi!</helloWorld>\n  //     <a\n  //       className=\"App-link\"\n  //       href=\"https://reactjs.org\"\n  //       target=\"_blank\"\n  //       rel=\"noopener noreferrer\"\n  //     >\n  //       Learn React\n  //     </a>\n  //   </header>\n  // </div>\n  ;\n}\n\nexport default App;","map":{"version":3,"sources":["C:/Projects/Studies/Webstorm/portfolio/application/src/App.js"],"names":["React","styled","helloWorld","h1","Title","Wrapper","section","App"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;;AAEA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,MAAMC,UAAU,GAAGD,MAAM,CAACE,EAAG;;;;CAA7B,C,CAMA;;AACA,MAAMC,KAAK,GAAGH,MAAM,CAACE,EAAG;;;;CAAxB,C,CAKA;;AACA,MAAME,OAAO,GAAGJ,MAAM,CAACK,OAAQ;;;CAA/B,C,CAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASC,GAAT,GAAe;AACb,sBACI,oBAAC,OAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,CADJ,CAMI;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAvBF;AAyBD;;AAED,eAAeA,GAAf","sourcesContent":["import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport styled from \"styled-components\";\n\nconst helloWorld = styled.h1`\n  font-size: 25px; \n  background-color: black;\n  color: white;\n`;\n\n// Create a Title component that'll render an <h1> tag with some styles\nconst Title = styled.h1`\n  font-size: 1.5em;\n  text-align: center;\n  color: palevioletred;\n`;\n// Create a Wrapper component that'll render a <section> tag with some styles\nconst Wrapper = styled.section`\n  padding: 4em;\n  background: papayawhip;\n`;\n// Use Title and Wrapper like any other React component – except they're styled!\n// render(\n//     <Wrapper>\n//       <Title>\n//         Hello World!\n//       </Title>\n//     </Wrapper>\n// );\n\nfunction App() {\n  return (\n      <Wrapper>\n        <Title>\n          Hello World!\n        </Title>\n      </Wrapper>\n      // <helloWorld>Hello!</helloWorld>\n    // <div className=\"App\">\n    //   <header className=\"App-header\">\n    //     <img src={logo} className=\"App-logo\" alt=\"logo\" />\n    //     <p>\n    //       Edit <code>src/App.js</code> and save to reload.\n    //     </p>\n    //     <helloWorld>Hi!</helloWorld>\n    //     <a\n    //       className=\"App-link\"\n    //       href=\"https://reactjs.org\"\n    //       target=\"_blank\"\n    //       rel=\"noopener noreferrer\"\n    //     >\n    //       Learn React\n    //     </a>\n    //   </header>\n    // </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}