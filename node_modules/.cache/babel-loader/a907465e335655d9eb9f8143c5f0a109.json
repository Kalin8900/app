{"ast":null,"code":"var _jsxFileName = \"C:\\\\Projects\\\\Studies\\\\Webstorm\\\\reactPort\\\\src\\\\App.js\";\nimport React, { useRef, useEffect } from 'react';\nimport { HeroPage } from \"./pages/HeroPage\";\nimport { AboutMePage } from \"./pages/AboutMePage\";\nimport { HireMePage } from \"./pages/HireMePage\";\nimport { MyWorkPage } from \"./pages/MyWorkPage\";\nimport { gsap } from 'gsap';\nimport { ScrollTrigger } from \"gsap/ScrollTrigger\";\n\nfunction App() {\n  const ref = useRef(null); // useEffect(() => {\n  // const deref = ref.current.children;\n  // const heroPage = deref[0];\n  // const aboutMePage = deref[1];\n  // const myWorkPage = deref[2];\n  // const heroImg = heroPage.children[0];\n  // const heroText = heroPage.children[2];\n  // const heroBtn = heroText.children[2];\n  // gsap.set([heroImg, heroText, heroBtn], {autoAlpha: 0});\n  // gsap.registerPlugin(ScrollTrigger);\n  // const tl = gsap.timeline({defaults: {ease: 'power2'}});\n  //\n  // tl.fromTo(heroImg,{y: '+=500'}, {y: 0, duration: 1} );\n  // tl.to(heroImg,{autoAlpha: 1, duration: 1}, '-=0.5');\n  // tl.fromTo(heroText,{x: '+=200'}, {x: 0, autoAlpha: 1, duration: 1}, '-=0.5');\n  // tl.fromTo(heroBtn,{y: '-=50'}, {y: 0, autoAlpha: 1, duration: 1});\n  // const tl2 = gsap.timeline({defaults: {ease: 'ease-in-out', duration: 2}})\n  // let pages = gsap.utils.toArray(\"section\");\n  //\n  // let currentPage = pages[0];\n  //\n  // gsap.set(\"body\", {height: ((pages.length) * 100) + \"%\"});\n  //\n  // pages.forEach((page, i) => {\n  //\n  //     ScrollTrigger.create({\n  //         start: () => (i - 0.5) * window.outerHeight,\n  //         end: () => (i + 0.5) * window.outerHeight,\n  //         onToggle: self => self.isActive && setPage(page),\n  //         markers: true\n  //     })\n  // })\n  //     const setPage = (newPage) => {\n  //\n  //         if(newPage !== currentPage)\n  //         {\n  //             gsap.to(currentPage, {scale: 0.8, autoAlpha: 0});\n  //             gsap.to(newPage, {scale: 1, autoAlpha: 1});\n  //             currentPage = newPage;\n  //         }\n  //     }\n  //     heroBtn.addEventListener('click', setPage(pages[1]));\n  // })\n\n  return [/*#__PURE__*/React.createElement(HeroPage, {\n    id: \"hero\",\n    imgId: \"heroImg\",\n    textWrapperId: \"heroText\",\n    heroBtnId: \"heroBtn\",\n    link: \"#aboutMe\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(AboutMePage, {\n    id: \"aboutMe\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }\n  }), /*#__PURE__*/React.createElement(MyWorkPage, {\n    id: \"myWork\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }\n  })];\n}\n\nexport default App; //<div>Icons made by <a href=\"https://www.flaticon.com/authors/roundicons\" title=\"Roundicons\">Roundicons</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>","map":{"version":3,"sources":["C:/Projects/Studies/Webstorm/reactPort/src/App.js"],"names":["React","useRef","useEffect","HeroPage","AboutMePage","HireMePage","MyWorkPage","gsap","ScrollTrigger","App","ref"],"mappings":";AAAA,OAAOA,KAAP,IAAeC,MAAf,EAAuBC,SAAvB,QAAuC,OAAvC;AACA,SAAQC,QAAR,QAAuB,kBAAvB;AACA,SAAQC,WAAR,QAA0B,qBAA1B;AACA,SAAQC,UAAR,QAAyB,oBAAzB;AACA,SAAQC,UAAR,QAAyB,oBAAzB;AACA,SAAQC,IAAR,QAAmB,MAAnB;AACA,SAAQC,aAAR,QAA4B,oBAA5B;;AAGA,SAASC,GAAT,GAAe;AACX,QAAMC,GAAG,GAAGT,MAAM,CAAC,IAAD,CAAlB,CADW,CAEX;AACI;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACJ;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAGA,SACI,cACI,oBAAC,QAAD;AAAU,IAAA,EAAE,EAAE,MAAd;AAAsB,IAAA,KAAK,EAAE,SAA7B;AAAwC,IAAA,aAAa,EAAE,UAAvD;AAAmE,IAAA,SAAS,EAAE,SAA9E;AAAyF,IAAA,IAAI,EAAE,UAA/F;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADJ,eAEI,oBAAC,WAAD;AAAa,IAAA,EAAE,EAAE,SAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFJ,eAGI,oBAAC,UAAD;AAAY,IAAA,EAAE,EAAE,QAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHJ,CADJ;AAOH;;AAED,eAAeQ,GAAf,C,CAEA","sourcesContent":["import React, {useRef, useEffect} from 'react';\r\nimport {HeroPage} from \"./pages/HeroPage\"\r\nimport {AboutMePage} from \"./pages/AboutMePage\";\r\nimport {HireMePage} from \"./pages/HireMePage\";\r\nimport {MyWorkPage} from \"./pages/MyWorkPage\";\r\nimport {gsap} from 'gsap';\r\nimport {ScrollTrigger} from \"gsap/ScrollTrigger\";\r\n\r\n\r\nfunction App() {\r\n    const ref = useRef(null);\r\n    // useEffect(() => {\r\n        // const deref = ref.current.children;\r\n        // const heroPage = deref[0];\r\n        // const aboutMePage = deref[1];\r\n        // const myWorkPage = deref[2];\r\n        // const heroImg = heroPage.children[0];\r\n        // const heroText = heroPage.children[2];\r\n        // const heroBtn = heroText.children[2];\r\n\r\n        // gsap.set([heroImg, heroText, heroBtn], {autoAlpha: 0});\r\n        // gsap.registerPlugin(ScrollTrigger);\r\n        // const tl = gsap.timeline({defaults: {ease: 'power2'}});\r\n        //\r\n        // tl.fromTo(heroImg,{y: '+=500'}, {y: 0, duration: 1} );\r\n        // tl.to(heroImg,{autoAlpha: 1, duration: 1}, '-=0.5');\r\n        // tl.fromTo(heroText,{x: '+=200'}, {x: 0, autoAlpha: 1, duration: 1}, '-=0.5');\r\n        // tl.fromTo(heroBtn,{y: '-=50'}, {y: 0, autoAlpha: 1, duration: 1});\r\n        // const tl2 = gsap.timeline({defaults: {ease: 'ease-in-out', duration: 2}})\r\n        // let pages = gsap.utils.toArray(\"section\");\r\n        //\r\n        // let currentPage = pages[0];\r\n        //\r\n        // gsap.set(\"body\", {height: ((pages.length) * 100) + \"%\"});\r\n        //\r\n        // pages.forEach((page, i) => {\r\n        //\r\n        //     ScrollTrigger.create({\r\n        //         start: () => (i - 0.5) * window.outerHeight,\r\n        //         end: () => (i + 0.5) * window.outerHeight,\r\n        //         onToggle: self => self.isActive && setPage(page),\r\n        //         markers: true\r\n        //     })\r\n        // })\r\n    //     const setPage = (newPage) => {\r\n    //\r\n    //         if(newPage !== currentPage)\r\n    //         {\r\n    //             gsap.to(currentPage, {scale: 0.8, autoAlpha: 0});\r\n    //             gsap.to(newPage, {scale: 1, autoAlpha: 1});\r\n    //             currentPage = newPage;\r\n    //         }\r\n    //     }\r\n    //     heroBtn.addEventListener('click', setPage(pages[1]));\r\n    // })\r\n\r\n\r\n    return (\r\n        [\r\n            <HeroPage id={\"hero\"} imgId={\"heroImg\"} textWrapperId={\"heroText\"} heroBtnId={\"heroBtn\"} link={\"#aboutMe\"}/>,\r\n            <AboutMePage id={\"aboutMe\"}/>,\r\n            <MyWorkPage id={\"myWork\"}/>\r\n        ]\r\n    );\r\n}\r\n\r\nexport default App;\r\n\r\n//<div>Icons made by <a href=\"https://www.flaticon.com/authors/roundicons\" title=\"Roundicons\">Roundicons</a> from <a href=\"https://www.flaticon.com/\" title=\"Flaticon\">www.flaticon.com</a></div>"]},"metadata":{},"sourceType":"module"}