{"ast":null,"code":"var _jsxFileName = \"E:\\\\Projekty\\\\Webstorm\\\\reactPort\\\\src\\\\pages\\\\MyWorkPage.js\";\nimport React, { useRef, useEffect } from \"react\";\nimport styled, { ThemeProvider } from \"styled-components\";\nimport PageWrapper from \"../components/PageWrapper\";\nimport blueTriangle from \"../misc/images/tr_3.png\";\nimport StyledTriangle from \"../components/Triangles\";\nimport rootTheme from \"../themes/root\";\nimport Project from \"../components/Project\";\nimport Arrow from \"../components/Arrow\";\nimport arrowSrc from \"../misc/images/nextWhite.svg\";\nimport { gsap } from 'gsap';\nconst MyWorkPageWrapper = styled(PageWrapper)`\n    display: flex;\n    flex-flow: column;\n`;\nconst CentringDiv = styled.div`\n  display: flex;\n  flex-flow: column;\n  justify-content: space-between;\n  height: 70vh;\n`;\nconst TextWrapper = styled.div`\n    margin-top: 5vh;\n    font-size: ${props => props.theme.fontSize.xlarge}vw;\n    font-weight: bold;\n    justify-self: center;\n    align-self: center;\n    margin-bottom: 5vh;\n`;\nconst ProjectsWrapper = styled.div`\n    position: relative;\n    width: 100%;\n    height: 55vh;\n    display: flex;\n    justify-content: space-between;\n    align-items: center;\n    //position: ;\n`;\nconst ArrowRight = styled(Arrow)`\n    width: 10vw;\n    height: 10vh;\n    z-index: 1;\n    \n    &:hover {\n    cursor: pointer;\n    }\n`;\nconst ArrowLeft = styled(ArrowRight)`\n    transform: rotate(180deg);\n`;\nconst FirstProject = styled(Project)`\n`;\nconst SecondProject = styled(Project)`\n`;\n\nclass MyWorkPage extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  } // const ref = useRef(null)\n  //\n  // let projects = [];\n  //\n  // let currentProject;\n  // useEffect(() => {\n  //     const projectsWrapper = ref.current.children;\n  //\n  //     let i;\n  //     for(i = 1; i < projectsWrapper.length - 1; ++i)\n  //         projects.push(projectsWrapper[i]);\n  //\n  //     currentProject = projects[0];\n  //\n  //     gsap.set(projects.slice(1), {autoAlpha: 0});\n  // })\n  //\n  // loadProjectRight = () => {\n  //     if(currentProject !== projects[projects.length - 1])\n  //     {\n  //         gsap.fromTo(projects[projects.findIndex(currentProject) + 1], {x: \"+=500\"}, {x: 0, zIndex: 1, autoAlpha: 1, duration: 1});\n  //     }\n  //     console.log(\"DONE!\")\n  // }\n\n\n  render() {\n    return /*#__PURE__*/React.createElement(ThemeProvider, {\n      theme: rootTheme,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(MyWorkPageWrapper, {\n      id: thi.props.id,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(CentringDiv, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(StyledTriangle, {\n      as: \"img\",\n      src: blueTriangle,\n      alt: \"blue\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(TextWrapper, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 25\n      }\n    }, \"Here you can find my projects\"), /*#__PURE__*/React.createElement(ProjectsWrapper, {\n      ref: ref,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(ArrowLeft, {\n      as: \"img\",\n      src: arrowSrc,\n      alt: \"arrow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(FirstProject, {\n      header: \"EAN-8 CODE GENERATOR\",\n      text: FirstProjectText,\n      href: \"https://github.com/Kalin8900/Studies/tree/master/zad_7\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(SecondProject, {\n      header: \"Animations in FLTK!\",\n      text: FirstProjectText,\n      href: \"https://github.com/Kalin8900/Studies/tree/master/zad_6\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 29\n      }\n    }), /*#__PURE__*/React.createElement(ArrowRight, {\n      onClick: this.loadProjectRight,\n      as: \"img\",\n      src: arrowSrc,\n      alt: \"arrow\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 29\n      }\n    })))));\n  }\n\n}\n\nconst FirstProjectText = \"This project was about refactoring code from C to C++. I received a short C program which was just creating and saving the bitmap. The main goal was to create a bitmap with generated EAN-8 Code and save it to file. \" + \"I've done this by creating a class witch handle the bitmap creating and saving. The class has also a method which can generate a EAN-8 Code with (almost) any size of the image. The implementation of the class is very surprising. I really recommend to take a look on it.\";\nexport { MyWorkPage };","map":{"version":3,"sources":["E:/Projekty/Webstorm/reactPort/src/pages/MyWorkPage.js"],"names":["React","useRef","useEffect","styled","ThemeProvider","PageWrapper","blueTriangle","StyledTriangle","rootTheme","Project","Arrow","gsap","MyWorkPageWrapper","CentringDiv","div","TextWrapper","props","theme","fontSize","xlarge","ProjectsWrapper","ArrowRight","ArrowLeft","FirstProject","SecondProject","MyWorkPage","Component","constructor","state","render","thi","id","ref","arrowSrc","FirstProjectText","loadProjectRight"],"mappings":"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","sourcesContent":["import React, {useRef, useEffect} from \"react\";\r\nimport styled, {ThemeProvider} from \"styled-components\";\r\nimport PageWrapper from \"../components/PageWrapper\";\r\nimport blueTriangle from \"../misc/images/tr_3.png\";\r\nimport StyledTriangle from \"../components/Triangles\";\r\nimport rootTheme from \"../themes/root\";\r\nimport Project from \"../components/Project\";\r\nimport Arrow from \"../components/Arrow\";\r\nimport arrowSrc from \"../misc/images/nextWhite.svg\";\r\nimport {gsap} from 'gsap';\r\n\r\nconst MyWorkPageWrapper = styled(PageWrapper)`\r\n    display: flex;\r\n    flex-flow: column;\r\n`;\r\n\r\nconst CentringDiv = styled.div`\r\n  display: flex;\r\n  flex-flow: column;\r\n  justify-content: space-between;\r\n  height: 70vh;\r\n`;\r\n\r\nconst TextWrapper = styled.div`\r\n    margin-top: 5vh;\r\n    font-size: ${props => props.theme.fontSize.xlarge}vw;\r\n    font-weight: bold;\r\n    justify-self: center;\r\n    align-self: center;\r\n    margin-bottom: 5vh;\r\n`;\r\n\r\nconst ProjectsWrapper = styled.div`\r\n    position: relative;\r\n    width: 100%;\r\n    height: 55vh;\r\n    display: flex;\r\n    justify-content: space-between;\r\n    align-items: center;\r\n    //position: ;\r\n`;\r\n\r\nconst ArrowRight = styled(Arrow)`\r\n    width: 10vw;\r\n    height: 10vh;\r\n    z-index: 1;\r\n    \r\n    &:hover {\r\n    cursor: pointer;\r\n    }\r\n`;\r\n\r\nconst ArrowLeft = styled(ArrowRight)`\r\n    transform: rotate(180deg);\r\n`;\r\n\r\nconst FirstProject = styled(Project)`\r\n`;\r\n\r\nconst SecondProject = styled(Project)`\r\n`;\r\n\r\nclass MyWorkPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {}\r\n    }\r\n\r\n    // const ref = useRef(null)\r\n    //\r\n    // let projects = [];\r\n    //\r\n    // let currentProject;\r\n    // useEffect(() => {\r\n    //     const projectsWrapper = ref.current.children;\r\n    //\r\n    //     let i;\r\n    //     for(i = 1; i < projectsWrapper.length - 1; ++i)\r\n    //         projects.push(projectsWrapper[i]);\r\n    //\r\n    //     currentProject = projects[0];\r\n    //\r\n    //     gsap.set(projects.slice(1), {autoAlpha: 0});\r\n    // })\r\n    //\r\n    // loadProjectRight = () => {\r\n    //     if(currentProject !== projects[projects.length - 1])\r\n    //     {\r\n    //         gsap.fromTo(projects[projects.findIndex(currentProject) + 1], {x: \"+=500\"}, {x: 0, zIndex: 1, autoAlpha: 1, duration: 1});\r\n    //     }\r\n    //     console.log(\"DONE!\")\r\n    // }\r\n\r\n    render()\r\n    {\r\n        return (\r\n            <ThemeProvider theme={rootTheme}>\r\n                <MyWorkPageWrapper id={thi.props.id}>\r\n                    <CentringDiv>\r\n                        <StyledTriangle as=\"img\" src={blueTriangle} alt=\"blue\"/>\r\n                        <TextWrapper>Here you can find my projects</TextWrapper>\r\n                        <ProjectsWrapper ref={ref}>\r\n                            <ArrowLeft as=\"img\" src={arrowSrc} alt=\"arrow\"/>\r\n                            <FirstProject header={\"EAN-8 CODE GENERATOR\"} text={FirstProjectText}\r\n                                          href={\"https://github.com/Kalin8900/Studies/tree/master/zad_7\"}/>\r\n                            <SecondProject header={\"Animations in FLTK!\"} text={FirstProjectText}\r\n                                           href={\"https://github.com/Kalin8900/Studies/tree/master/zad_6\"}/>\r\n                            <ArrowRight onClick={this.loadProjectRight} as=\"img\" src={arrowSrc} alt=\"arrow\"/>\r\n                        </ProjectsWrapper>\r\n                    </CentringDiv>\r\n                </MyWorkPageWrapper>\r\n            </ThemeProvider>\r\n        )\r\n    }\r\n}\r\n\r\nconst FirstProjectText = \"This project was about refactoring code from C to C++. I received a short C program which was just creating and saving the bitmap. The main goal was to create a bitmap with generated EAN-8 Code and save it to file. \" +\r\n    \"I've done this by creating a class witch handle the bitmap creating and saving. The class has also a method which can generate a EAN-8 Code with (almost) any size of the image. The implementation of the class is very surprising. I really recommend to take a look on it.\";\r\n\r\nexport {MyWorkPage};"]},"metadata":{},"sourceType":"module"}